apply plugin: 'com.android.application'
apply plugin: 'de.bitdroid.jaxrs2retrofit'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.bitdroid.jaxrs2retrofit:plugin:0.4.1'
    }
}

def generatedSourcesDir = file('src/main/java-gen')
def mainSourcesDir = file('src/main/java')

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "de.fau.cs.mad.fablab.android"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            storeFile file("unknown")
            storePassword "unknown"
            keyAlias "unknown"
            keyPassword "unknown"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            java {
                srcDir mainSourcesDir
                srcDir generatedSourcesDir
            }
        }
    }
}

preBuild.dependsOn(":../fablab-common:build")

dependencies {
    compile files('../../fablab-common/build/libs/fablab-common-1.0.jar')
    // jackson annotations are required for POJOs
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
    compile 'com.android.support:appcompat-v7:21.0.0'
    // Libraries for the REST Client (Retrofit)
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okio:okio:1.0.1'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'javax.persistence:persistence-api:1.0'
    compile ('eu.livotov.labs:zxscanlib:2.0.1@aar') {transitive=true}
    // Cart Sliding Up Panel
    compile 'com.sothree.slidinguppanel:library:3.0.0'
    // Cart CardView and RecyclerView and Sqipe-To-Remove lib
    compile 'com.android.support:cardview-v7:21.0.+'
    compile 'com.android.support:recyclerview-v7:21.0.0'
    compile 'com.github.brnunes:swipeablerecyclerview:1.0.1'
    // Navigation Drawer Design
    compile 'com.android.support:support-v4'
    compile 'de.hdodenhof:circleimageview:1.2.1'
    compile 'com.github.clans:fab:1.5.0'
    compile 'org.roboguice:roboguice:3.0.1'
    provided 'org.roboguice:roboblender:3.0.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile "com.google.android.gms:play-services:3.1.+"
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}

afterEvaluate {
    project.tasks.matching { it.name.startsWith('jaxRs2Retrofit') }.each {
        it.inputDir = file(project(':../fablab-common').projectDir.toString() + '/src/main/java')
        it.outputDir = generatedSourcesDir
        it.packageName = 'de.fau.cs.mad.fablab.rest.myapi'
        it.excludedClassNamesRegex = "MyHiddenResource"
        it.generateSynchronousMethods = true
        it.generateCallbackMethods = true
        it.generateRxJavaMethods = false
    }
}

